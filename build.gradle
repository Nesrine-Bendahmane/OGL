plugins {
    id 'java'
    id 'jacoco'
    id ("org.sonarqube") version "4.4.0.3356"
    id ("maven-publish")
    id 'de.zebrajaeger.sendMail' version '0.2.2'
    id ("com.github.spacialcircumstances.gradle-cucumber-reporting") version "0.1.25"
    id ("io.github.oleksiiparf.slack-webhook") version "1.0.0"
}

group = 'com.example'
version = '1.0'
repositories {
    mavenCentral()

}

dependencies {
    testImplementation 'io.cucumber:cucumber-java:6.0.0'
    testImplementation 'io.cucumber:cucumber-junit:6.0.0'
    testImplementation 'junit:junit:4.12'
}


publishing {
    repositories {
        maven {
            url System.getenv('MAVEN_REPO_URL')
            credentials {
                username System.getenv('MAVEN_REPO_USERNAME')
                password System.getenv('MAVEN_REPO_PASSWORD')
            }
        }
    }
}

cucumberReports {
  outputDir = file('build/reports/cucumber')
  buildId = '0'
  reports = files('reports/example-report.json')
}

tasks.withType(Test) {
  useJUnit() // Explicitly set JUnit for tests
  reports {
    junitXml.required.set(true) // Ensure XML reports are generated
    html.required.set(true) // Ensure HTML reports are generated
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn test
  reports {
    xml.required.set(true) // Required for SonarQube
    html.required.set(true) // Optional: Generates an HTML report
  }
}

tasks.javadoc {
  options.encoding = 'UTF-8'
  options.addStringOption('Xdoclint:none', '-quiet')
}

sonar {
  properties {
    property "sonar.projectKey", "com.example:h_code"
    property "sonar.projectName", "n_tpogl7"
    property "sonar.skipCompile", "true"
    property 'sonar.qualitygate.wait', true
    property "sonar.host.url", "http://197.140.142.82:9000"
    property "sonar.projectVersion", "1.0"
    property "sonar.sources", "src/main/java"
    property "sonar.tests", "src/test/java"
    property "sonar.sourceEncoding", "UTF-8"
    property "sonar.junit.reportPaths", "build/test-results/test"
    property "sonar.jacoco.reportPaths", "build/jacoco/test.exec"
    property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
  }
}

sendMail {
    smtpServer {
        host "smtp.gmail.com"
        port 587
        user "bendahmane.nesrinee@gmail.com"
        password "ckkw ornt xisl rqir"
    }
    mail {
        from "bendahmane.nesrinee@gmail.com"
        to "bendahmane.nesrinee@gmail.com"
        subject "Deployment Status"
        body "Hello! The deployment status is: SUCCESS/FAILURE"
    }
}

slack {
    publishedPlugin {
        webHook = "https://hooks.slack.com/services/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"
        attachment {
            fallback = "New version successfully published."
            pretext = "New version successfully published."
            color = "good"
            field {
                title = "Module"
                value = project.name
                shortValue = true
            }
            field {
                title = "Version"
                value = project.version
                shortValue = true
            }
        }
        attachment {
            fallback = "Another line on sent together."
            pretext = "Another line on sent together."
            color = "good"
            field {
                title = "Something"
                value = "Something text"
            }
        }
    }
}
